version: "3.5"

services:
  api01: &api
    build: .
    hostname: api01
    expose:
      - "80"
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "45MB"
    volumes:
      - sockets:/tmp/sockets
      - type: 'volume'
        source: postgres-storage
        target: /var/run/postgresql/

  api02:
    <<: *api
    hostname: api02
  
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - sockets:/tmp/sockets
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    privileged: true
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "60MB"

  db:
    image: postgres:latest
    hostname: db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: rinhadb
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres.conf:/docker-entrypoint-initdb.d/postgres.conf
      - type: 'volume'
        source: postgres-storage
        target: /var/run/postgresql/
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgres.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "400MB"

networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1

volumes:
  sockets:
  postgres-storage: